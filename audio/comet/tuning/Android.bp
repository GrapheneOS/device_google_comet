//
// Copyright (C) 2023 The Android Open-Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

soong_namespace {}

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "device_google_caimito_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["device_google_comet_license"],
}

prebuilt_defaults {
    name: "aoc_defaults",
    soc_specific: true,
    sub_dir: "aoc",
}

prebuilt_etc {
    name: "recording.gatf",
    src: "bluenote/recording.gatf",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "smartfeature.gstf",
    src: "bluenote/smartfeature.gstf",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "template.xml",
    src: "bluenote/template.xml",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "tuning_constraints_combination.xml",
    src: "bluenote/tuning_constraints_combination.xml",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "compens_spk_l_1.conf",
    src: "compensation/compens_spk_l_1.conf",
    soc_specific: true,
}

prebuilt_etc {
    name: "compens_spk_l_2.conf",
    src: "compensation/compens_spk_l_2.conf",
    soc_specific: true,
}

prebuilt_etc {
    name: "compens_spk_r_1.conf",
    src: "compensation/compens_spk_r_1.conf",
    soc_specific: true,
}

prebuilt_etc {
    name: "compens_spk_r_2.conf",
    src: "compensation/compens_spk_r_2.conf",
    soc_specific: true,
}

prebuilt_etc {
    name: "BLUETOOTH.dat",
    src: "fortemedia/BLUETOOTH.dat",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "BLUETOOTH.mods",
    src: "fortemedia/BLUETOOTH.mods",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "HANDSFREE.dat",
    src: "fortemedia/HANDSFREE.dat",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "HANDSFREE.mods",
    src: "fortemedia/HANDSFREE.mods",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "HANDSET.dat",
    src: "fortemedia/HANDSET.dat",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "HANDSET.mods",
    src: "fortemedia/HANDSET.mods",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "HEADSET.dat",
    src: "fortemedia/HEADSET.dat",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "HEADSET.mods",
    src: "fortemedia/HEADSET.mods",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "mcps.dat",
    src: "fortemedia/mcps.dat",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "downlink_bluetooth_headset_config.pb",
    src: "apmg3/downlink_bluetooth_headset_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "downlink_dock_config.pb",
    src: "apmg3/downlink_dock_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "downlink_external_speaker_config.pb",
    src: "apmg3/downlink_external_speaker_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "downlink_handset_config.pb",
    src: "apmg3/downlink_handset_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "downlink_speaker_config.pb",
    src: "apmg3/downlink_speaker_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "downlink_wired_headset_config.pb",
    src: "apmg3/downlink_wired_headset_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_bluetooth_headset_aec_off_config.pb",
    src: "apmg3/uplink_bluetooth_headset_aec_off_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_bluetooth_headset_aec_on_config.pb",
    src: "apmg3/uplink_bluetooth_headset_aec_on_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_dock_aec_off_config.pb",
    src: "apmg3/uplink_dock_aec_off_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_dock_aec_on_config.pb",
    src: "apmg3/uplink_dock_aec_on_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_external_speaker_aec_off_config.pb",
    src: "apmg3/uplink_external_speaker_aec_off_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_external_speaker_aec_on_config.pb",
    src: "apmg3/uplink_external_speaker_aec_on_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_handset_aec_off_config.pb",
    src: "apmg3/uplink_handset_aec_off_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_handset_aec_on_config.pb",
    src: "apmg3/uplink_handset_aec_on_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_speaker_aec_off_config.pb",
    src: "apmg3/uplink_speaker_aec_off_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_speaker_aec_on_config.pb",
    src: "apmg3/uplink_speaker_aec_on_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_wired_headset_aec_off_config.pb",
    src: "apmg3/uplink_wired_headset_aec_off_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "uplink_wired_headset_aec_on_config.pb",
    src: "apmg3/uplink_wired_headset_aec_on_config.pb",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "waves_config.ini",
    src: "waves/waves_config.ini",
    soc_specific: true,
}

prebuilt_etc {
    name: "waves_preset.mps",
    src: "waves/waves_preset.mps",
    soc_specific: true,
}

prebuilt_etc {
    name: "speaker_post_processing_volume_spec.xml",
    src: "pts/speaker_post_processing_volume_spec.xml",
    defaults: ["aoc_defaults"],
}

prebuilt_etc {
    name: "waves_config_nx.ini",
    src: "waves/waves_config_nx.ini",
    soc_specific: true,
}

prebuilt_etc {
    name: "waves_preset_nx.mps",
    src: "waves/waves_preset_nx.mps",
    soc_specific: true,
}

prebuilt_etc {
    name: "test_config.ini",
    src: "waves/tests/test_config.ini",
    soc_specific: true,
}

prebuilt_etc {
    name: "test_preset.mps",
    src: "waves/tests/test_preset.mps",
    soc_specific: true,
}

prebuilt_etc {
    name: "vendor.google.whitechapel.audio.hal.effect.spatializer.base",
    src: "spatializer/base",
    soc_specific: true,
    filename_from_src: true,
    relative_install_path: "spatializer",
}

prebuilt_etc {
    name: "vendor.google.whitechapel.audio.hal.effect.spatializer.mode_2_ch",
    src: "spatializer/mode_2_ch",
    soc_specific: true,
    filename_from_src: true,
    relative_install_path: "spatializer",
}

prebuilt_etc {
    name: "vendor.google.whitechapel.audio.hal.effect.spatializer.mode_6_ch",
    src: "spatializer/mode_6_ch",
    soc_specific: true,
    filename_from_src: true,
    relative_install_path: "spatializer",
}

prebuilt_etc {
    name: "vendor.google.whitechapel.audio.hal.effect.spatializer.mode_xaural",
    src: "spatializer/mode_xaural",
    soc_specific: true,
    filename_from_src: true,
    relative_install_path: "spatializer",
}
